[{"/home/nick/the_odin_project/memory-cards/src/index.js":"1","/home/nick/the_odin_project/memory-cards/src/App.js":"2","/home/nick/the_odin_project/memory-cards/src/components/Card.js":"3","/home/nick/the_odin_project/memory-cards/src/components/Header.js":"4","/home/nick/the_odin_project/memory-cards/src/components/Loading.js":"5"},{"size":197,"mtime":1611934697061,"results":"6","hashOfConfig":"7"},{"size":2964,"mtime":1611942981036,"results":"8","hashOfConfig":"7"},{"size":260,"mtime":1611891556464,"results":"9","hashOfConfig":"7"},{"size":1539,"mtime":1611948345775,"results":"10","hashOfConfig":"7"},{"size":485,"mtime":1611885580892,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"radsff",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/home/nick/the_odin_project/memory-cards/src/index.js",[],["25","26"],"/home/nick/the_odin_project/memory-cards/src/App.js",["27"],"import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport uniqid from \"uniqid\";\nimport Header from \"./components/Header\";\nimport Card from \"./components/Card\";\nimport Loading from \"./components/Loading\";\nimport cheddar from \"./assets/cheddar.jpeg\";\nimport swiss from \"./assets/swiss.jpeg\";\nimport american from \"./assets/american.jpeg\";\nimport colby from \"./assets/colby.jpeg\";\nimport mozz from \"./assets/mozz.jpeg\";\nimport parm from \"./assets/parmesan.jpeg\";\nimport bleu from \"./assets/bleu.jpeg\";\nimport brie from \"./assets/brie.jpeg\";\nimport pepperjack from \"./assets/pepperjack.webp\";\nimport gouda from \"./assets/gouda.jpeg\";\nimport gruyere from \"./assets/gruyere.jpeg\";\nimport camembert from \"./assets/camembert.jpeg\";\nimport jarlsberg from \"./assets/jarlsberg.jpeg\";\nimport tilsit from \"./assets/tilsit.jpeg\";\nimport lambert from \"./assets/lambert.jpeg\";\nimport roquefort from \"./assets/roquefort.jpeg\";\nimport mascarpone from \"./assets/mascarpone.webp\";\nimport feta from \"./assets/feta.jpeg\";\n\nfunction App() {\n  const [highScore, setHighScore] = useState(0);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [currentDeck, setCurrentDeck] = useState(null);\n  const [guessList, setGuessList] = useState([]);\n\n  useEffect(() => {\n    buildDeck();\n  }, [guessList]);\n\n  useEffect(() => {\n    document.title = \"A Real Brain Cheeser\";\n  }, []);\n\n  const isDeckSet = () => !!currentDeck;\n\n  const buildDeck = () => {\n    let cheeses = [\n      [gouda, \"gouda\"],\n      [gruyere, \"gruyere\"],\n      [camembert, \"camembert\"],\n      [jarlsberg, \"jarlsberg\"],\n      [tilsit, \"tilsit\"],\n      [lambert, \"lambert\"],\n      [roquefort, \"roquefort\"],\n      [mascarpone, \"mascarpone\"],\n      [feta, \"feta\"],\n      [cheddar, \"cheddar\"],\n      [swiss, \"swiss\"],\n      [american, \"american\"],\n      [colby, \"colby\"],\n      [mozz, \"mozzarella\"],\n      [parm, \"parmesan\"],\n      [bleu, \"bleu\"],\n      [brie, \"brie\"],\n      [pepperjack, \"pepperjack\"],\n    ];\n\n    const selectedCheeses = [];\n    for (let i = 0; i < 6; i++) {\n      const idx = Math.floor(Math.random() * cheeses.length);\n      const [imgSrc, name] = cheeses.splice(idx, 1)[0];\n\n      selectedCheeses.push(\n        <Card imgSrc={imgSrc} name={name} key={uniqid()} onClick={handleClick}/>\n      );\n    }\n\n    setCurrentDeck(selectedCheeses);\n  };\n\n  const handleClick = (name) => {\n    if (guessList.includes(name)) {\n      if (currentScore > highScore) setHighScore(currentScore);\n      \n      setCurrentScore(0);\n      setGuessList([]);\n\n      return\n    }\n\n    setCurrentScore(currentScore + 1)\n    setGuessList([...guessList, name])\n  }\n\n  if (!isDeckSet()) {\n    return (\n      <>\n        <Header highScore={highScore} currentScore={currentScore} />\n        <Loading />\n      </>\n    );\n  } else {\n    return (\n      <>\n        <Header highScore={highScore} currentScore={currentScore} />\n        <div className=\"cards\">{currentDeck}</div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","/home/nick/the_odin_project/memory-cards/src/components/Card.js",["28"],"const Card = (props) => {\n  return (\n    <div className=\"card\" onClick={props.onClick.bind(this, props.name)}>\n      <div className=\"card-img\">\n        <img src={props.imgSrc} />\n      </div>\n      <h3>{props.name}</h3>\n    </div>\n  )\n};\n\nexport default Card;\n","/home/nick/the_odin_project/memory-cards/src/components/Header.js",["29","30"],"/home/nick/the_odin_project/memory-cards/src/components/Loading.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":34,"column":6,"nodeType":"37","endLine":34,"endColumn":17,"suggestions":"38"},{"ruleId":"39","severity":1,"message":"40","line":5,"column":9,"nodeType":"41","endLine":5,"endColumn":35},{"ruleId":"35","severity":1,"message":"42","line":17,"column":6,"nodeType":"37","endLine":17,"endColumn":23,"suggestions":"43"},{"ruleId":"44","severity":1,"message":"45","line":20,"column":11,"nodeType":"46","messageId":"47","endLine":20,"endColumn":15},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'buildDeck'. Either include it or remove the dependency array.","ArrayExpression",["50"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'animationName'. Either include it or remove the dependency array.",["51"],"no-unused-vars","'help' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},{"desc":"54","fix":"55"},"Update the dependencies array to be: [buildDeck, guessList]",{"range":"56","text":"57"},"Update the dependencies array to be: [animationName, props.highScore]",{"range":"58","text":"59"},[1285,1296],"[buildDeck, guessList]",[552,569],"[animationName, props.highScore]"]